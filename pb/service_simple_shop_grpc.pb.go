// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.23.4
// source: service_simple_shop.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	SimpleShop_CreateUser_FullMethodName = "/pb.SimpleShop/CreateUser"
)

// SimpleShopClient is the client API for SimpleShop service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SimpleShopClient interface {
	CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error)
}

type simpleShopClient struct {
	cc grpc.ClientConnInterface
}

func NewSimpleShopClient(cc grpc.ClientConnInterface) SimpleShopClient {
	return &simpleShopClient{cc}
}

func (c *simpleShopClient) CreateUser(ctx context.Context, in *CreateUserRequest, opts ...grpc.CallOption) (*CreateUserResponse, error) {
	out := new(CreateUserResponse)
	err := c.cc.Invoke(ctx, SimpleShop_CreateUser_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SimpleShopServer is the server API for SimpleShop service.
// All implementations must embed UnimplementedSimpleShopServer
// for forward compatibility
type SimpleShopServer interface {
	CreateUser(context.Context, *CreateUserRequest) (*CreateUserResponse, error)
	mustEmbedUnimplementedSimpleShopServer()
}

// UnimplementedSimpleShopServer must be embedded to have forward compatible implementations.
type UnimplementedSimpleShopServer struct {
}

func (UnimplementedSimpleShopServer) CreateUser(context.Context, *CreateUserRequest) (*CreateUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUser not implemented")
}
func (UnimplementedSimpleShopServer) mustEmbedUnimplementedSimpleShopServer() {}

// UnsafeSimpleShopServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SimpleShopServer will
// result in compilation errors.
type UnsafeSimpleShopServer interface {
	mustEmbedUnimplementedSimpleShopServer()
}

func RegisterSimpleShopServer(s grpc.ServiceRegistrar, srv SimpleShopServer) {
	s.RegisterService(&SimpleShop_ServiceDesc, srv)
}

func _SimpleShop_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SimpleShopServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SimpleShop_CreateUser_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SimpleShopServer).CreateUser(ctx, req.(*CreateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// SimpleShop_ServiceDesc is the grpc.ServiceDesc for SimpleShop service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SimpleShop_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pb.SimpleShop",
	HandlerType: (*SimpleShopServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateUser",
			Handler:    _SimpleShop_CreateUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service_simple_shop.proto",
}
